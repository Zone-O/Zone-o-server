// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "../docs/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String         @id @unique @default(cuid())
  username           String
  email              String         @unique
  password           String
  createdAt          DateTime       @default(now())
  lastLogin          DateTime       @default(now())
  school             String         @default("Epitech")
  favories           Accomodation[]
  lastQQVE           QQVE?
}

model Accomodation {
  id                 String          @id @unique @default(cuid())
  linkedUser               User            @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  surface            Float
  createdAt          DateTime        @default(now())
  localisation       String          @default("47° 13' 6.136 N 1° 33' 13.036 W")
  price              Float
  energyConsumption  String          @default("A")
  Url                String
}

model QQVE {
  id                 String          @id @unique @default(cuid())
  linkedUser         User            @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  value              Int
  createdAt          DateTime        @default(now())
}

model rentalFile {
  id                 String          @id @unique @default(cuid())
  name               String
  createdAt          DateTime        @default(now())
  rentalFiles        rentalFiles     @relation(fields: [id], references: [id])
}

model rentalFiles {
  id                 String          @id @unique @default(cuid())
  filenames          rentalFile[]
  accomodationId     String
  createdAt          DateTime        @default(now())
  deadline           DateTime        @default(now())
}



model AreaOfInterest {
  id          String      @id @unique @default(cuid())
  essential   Boolean
  name        String
  description String?
  localisation   String
}

model publicTransports {
  id          String      @id @unique @default(cuid())
  createdAt   DateTime
  name        String
  nextRefresh DateTime
}